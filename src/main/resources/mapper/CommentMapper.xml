<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboard.mapper.CommentMapper">

    <!-- 댓글 목록 불러오기 -->
    <select id="getCommentList" parameterType="com.example.springboard.dto.request.CommentListRequest" resultType="com.example.springboard.dto.response.CommentResponse">
        select a.*, b.nickname
        from comments as a
        left join user as b
            on a.uid = b.uid
        where a.post_no = #{postNo} and a.time_deleted is null
        order by a.comment_no desc
        limit #{startCommentNo}, #{limit}
    </select>

    <!-- 댓글 상세정보 가져오기 -->
    <select id="getComment" resultType="com.example.springboard.vo.Comment">
        select * from comments where comment_no = #{commentNo} and post_no = #{postNo}
    </select>

    <!-- 댓글 등록 -->
    <insert id="insertComment" parameterType="com.example.springboard.vo.Comment">
        insert into comments(
                             uid,
                             post_no,
                             content,
                             guest_id,
                             guest_pw
        ) values (
                  #{uid},
                  #{postNo},
                  #{content},
                  #{guestId},
                  #{guestPw}
                         )
        <selectKey keyProperty="commentNo" resultType="int" order="AFTER">
            select last_insert_id()
        </selectKey>
    </insert>

    <update id="updateComment" parameterType="com.example.springboard.vo.Comment">
        update comments
        set content = #{content},
            time_modified = now()
        where post_no = #{postNo} and comment_no = #{commentNo}
    </update>

    <update id="deleteComment" parameterType="com.example.springboard.vo.Comment">
        update comments
        set time_deleted = now()
        where post_no = #{postNo} and comment_no = #{commentNo}
    </update>
</mapper>